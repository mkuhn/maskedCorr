// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// masked_corr
double masked_corr(NumericVector v1, NumericVector v2, int mask, List mask_ranges);
RcppExport SEXP maskedCorr_masked_corr(SEXP v1SEXP, SEXP v2SEXP, SEXP maskSEXP, SEXP mask_rangesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type v1(v1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v2(v2SEXP);
    Rcpp::traits::input_parameter< int >::type mask(maskSEXP);
    Rcpp::traits::input_parameter< List >::type mask_ranges(mask_rangesSEXP);
    __result = Rcpp::wrap(masked_corr(v1, v2, mask, mask_ranges));
    return __result;
END_RCPP
}
// contains_singleton
bool contains_singleton(IntegerVector vs, int N_bits);
RcppExport SEXP maskedCorr_contains_singleton(SEXP vsSEXP, SEXP N_bitsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type vs(vsSEXP);
    Rcpp::traits::input_parameter< int >::type N_bits(N_bitsSEXP);
    __result = Rcpp::wrap(contains_singleton(vs, N_bits));
    return __result;
END_RCPP
}
// count_set_bits
int count_set_bits(IntegerVector vs, int N_bits);
RcppExport SEXP maskedCorr_count_set_bits(SEXP vsSEXP, SEXP N_bitsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type vs(vsSEXP);
    Rcpp::traits::input_parameter< int >::type N_bits(N_bitsSEXP);
    __result = Rcpp::wrap(count_set_bits(vs, N_bits));
    return __result;
END_RCPP
}
